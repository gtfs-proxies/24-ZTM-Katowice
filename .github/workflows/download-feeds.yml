name: download-feeds
run-name: Downloading GTFS feeds

on: 
  push:
    branches:
      - 'main'
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: '36 23 * * *'

env:
  FEED_NAME: "24-ZTM-Katowice"

jobs:
  download:
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Get current date
        id: date
        run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Restore cached feed
        id: cache-feed-restore
        uses: actions/cache/restore@v4
        with:
          path: /tmp/${{ env.FEED_NAME }}/original/
          key: feed

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Install gtfstidy
        id: install-gtfstidy
        run: go install github.com/patrickbr/gtfstidy@latest

      - name: Download GTFS feeds
        run: bash download.sh
      
      - name: Save feed
        id: cache-feed-save
        uses: actions/cache/save@v4
        with:
          path: /tmp/${{ env.FEED_NAME }}/original/
          key: feed-${{ steps.date.outputs.DATE }}

      - name: Merge gtfs feeds
        id: merge-feeds
        run: ./gtfsmerge.py /tmp/${{ env.FEED_NAME }}/original/*.zip /tmp/${{ env.FEED_NAME }}/output.zip

      - name: Run gtfstidy
        id: run-gtfstidy
        run: gtfstidy -WSCRmTcsOD --keep-service-ids -o /tmp/${{ env.FEED_NAME }}/tidied.zip /tmp/${{ env.FEED_NAME }}/output.zip

      - name: Unzip GTFS feeds
        run: bash unzip.sh

      - uses: stefanzweifel/git-auto-commit-action@v5
        id: auto-commit-action
        with:
          commit_message: Add new feeds (${{ steps.date.outputs.DATE }})
          file_pattern: 'feed/'
          branch: main
          # Optional. Tag name being created in the local repository and 
          # pushed to remote repository and defined branch.
          tagging_message: ${{ steps.date.outputs.DATE }}

      - name: Zip GTFS feeds
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        id: zip
        run: zip -oj9 ${{ env.FEED_NAME }} feed/*

      - name: Create Release
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.date.outputs.DATE }}
          release_name: Release ${{ steps.date.outputs.DATE }}
          draft: false
          prerelease: false
      
      - name: Upload Release Asset
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./${{ env.FEED_NAME }}.zip
          asset_name: ${{ env.FEED_NAME }}.zip
          asset_content_type: application/zip